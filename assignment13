Question 18: Create a clock. What will be your approach to solving this problem statement?
Hint 1:- Use flutter inbuilt library
Hint 2:- Use only a timer.
Hint 3:- Clock runs only for 1 sec.
Source code:
import 'dart:async';
import 'package:flutter/material.dart';

void main() {
  runApp(const MaterialApp(
    debugShowCheckedModeBanner: false,
    home: ClockScreen(),
  ));
}

class ClockScreen extends StatefulWidget {
  const ClockScreen({super.key});

  @override
  State<ClockScreen> createState() => _ClockScreenState();
}

class _ClockScreenState extends State<ClockScreen> {
  String currentTime = "";
  Timer? timer;

  @override
  void initState() {
    super.initState();
    _startClock();
  }

  void _startClock() {
    // Initialize current time
    _updateTime();

    // Run the timer every 1 second
    timer = Timer.periodic(const Duration(seconds: 1), (Timer t) {
      _updateTime();
    });
  }

  void _updateTime() {
    final now = DateTime.now();
    setState(() {
      // Format time as HH:mm:ss
      currentTime =
          "${_twoDigits(now.hour)}:${_twoDigits(now.minute)}:${_twoDigits(now.second)}";
    });
  }

  String _twoDigits(int n) => n.toString().padLeft(2, '0');

  @override
  void dispose() {
    timer?.cancel(); // Stop timer when widget is removed
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.black,
      appBar: AppBar(
        backgroundColor: Colors.blueGrey,
        title: const Text("Flutter Clock"),
        centerTitle: true,
      ),
      body: Center(
        child: Text(
          currentTime,
          style: const TextStyle(
            fontSize: 60,
            fontWeight: FontWeight.bold,
            color: Colors.white,
            letterSpacing: 4,
          ),
        ),
      ),
    );
  }
}
